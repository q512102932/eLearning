########################################################################
#  |  __ \ /\   |  __ \     /\   |  \/  |  ____|__   __|  ____|  __ \
#  | |__) /  \  | |__) |   /  \  | \  / | |__     | |  | |__  | |__) |
#  |  ___/ /\ \ |  _  /   / /\ \ | |\/| |  __|    | |  |  __| |  _  /
#  | |  / ____ \| | \ \  / ____ \| |  | | |____   | |  | |____| | \ \
#  |_| /_/    \_\_|  \_\/_/    \_\_|  |_|______|  |_|  |______|_|  \_\
########################################################################
Parameters:
  CodeBucketName:
    Type: String
    Default: jennyelearningtest
    Description: "[ParamOverride] The bucket name of source code."
  CodeObjectKey:
    Type: String
    Default: build/build.zip
    Description: "[ParamOverride] The object key of source code."
  LOGLEVEL:
    Type: Number
    Default: 5

Resources:
  #  .----------------.  .----------------.  .----------------.   .----------------.  .----------------.  .----------------.  .----------------.  .----------------.  .----------------.  .----------------.
  # | .--------------. || .--------------. || .--------------. | | .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. |
  # | |      __      | || |   ______     | || |     _____    | | | |    ______    | || |      __      | || |  _________   | || |  _________   | || | _____  _____ | || |      __      | || |  ____  ____  | |
  # | |     /  \     | || |  |_   __ \   | || |    |_   _|   | | | |  .' ___  |   | || |     /  \     | || | |  _   _  |  | || | |_   ___  |  | || ||_   _||_   _|| || |     /  \     | || | |_  _||_  _| | |
  # | |    / /\ \    | || |    | |__) |  | || |      | |     | | | | / .'   \_|   | || |    / /\ \    | || | |_/ | | \_|  | || |   | |_  \_|  | || |  | | /\ | |  | || |    / /\ \    | || |   \ \  / /   | |
  # | |   / ____ \   | || |    |  ___/   | || |      | |     | | | | | |    ____  | || |   / ____ \   | || |     | |      | || |   |  _|  _   | || |  | |/  \| |  | || |   / ____ \   | || |    \ \/ /    | |
  # | | _/ /    \ \_ | || |   _| |_      | || |     _| |_    | | | | \ `.___]  _| | || | _/ /    \ \_ | || |    _| |_     | || |  _| |___/ |  | || |  |   /\   |  | || | _/ /    \ \_ | || |    _|  |_    | |
  # | ||____|  |____|| || |  |_____|     | || |    |_____|   | | | |  `._____.'   | || ||____|  |____|| || |   |_____|    | || | |_________|  | || |  |__/  \__|  | || ||____|  |____|| || |   |______|   | |
  # | |              | || |              | || |              | | | |              | || |              | || |              | || |              | || |              | || |              | || |              | |
  # | '--------------' || '--------------' || '--------------' | | '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' |
  #  '----------------'  '----------------'  '----------------'   '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------'
  RESTAPI:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Description: eLearning API
      EndpointConfiguration:
        Types:
          - EDGE
      Name: !Join
        - "-"
        - - !Ref "AWS::StackName"
          - RESTAPI
  RESTAPIDeploymentV1:
    DependsOn:
      - UsersProfileResource
      - UsersCourseResource
      - UsersPasswordResource
      - UsersPremiumResource
      - UsersActivateResource
    Type: "AWS::ApiGateway::Deployment"
    Properties:
      RestApiId: !Ref RESTAPI

  # Defines the stage where deployment is going to be deployed to.
  RESTAPIStage:
    Type: "AWS::ApiGateway::Stage"
    Properties:
      Description: Production
      RestApiId: !Ref RESTAPI
      StageName: prod
  APIInvokeLambdaRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - apigateway.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: !Join
            - "-"
            - - !Ref "AWS::StackName"
              - APIInvokeLambdaRole
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: "lambda:InvokeFunction"
                Resource: "*"
  # ***************************************************************
  # *                                                             *
  # * API GW - Resources Section                                  *
  # *                                                             *
  # * This section defines the following structure.               *
  # *                                                             *
  # * /                                                           *
  # * |- users                                                    *
  # * |  |- profile                                               *
  # * |  |- course                                                *
  # * |  |- password                                              *
  # * |  |- premium                                               *
  # * |  |- activate                                              *
  # *                                                             *
  # ***************************************************************

  # /users
  UsersResource:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      ParentId: !GetAtt RESTAPI.RootResourceId
      PathPart: users
      RestApiId: !Ref RESTAPI

  # /users/profile
  UsersProfileResource:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      ParentId: !Ref UsersResource
      PathPart: profile
      RestApiId: !Ref RESTAPI
      
  # /users/course
  UsersCourseResource:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      ParentId: !Ref UsersResource
      PathPart: course
      RestApiId: !Ref RESTAPI
  
  # /users/password
  UsersPasswordResource:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      ParentId: !Ref UsersResource
      PathPart: password
      RestApiId: !Ref RESTAPI

  # /users/premium
  UsersPremiumResource:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      ParentId: !Ref UsersResource
      PathPart: premium
      RestApiId: !Ref RESTAPI

  # /users/activate
  UsersActivateResource:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      ParentId: !Ref UsersResource
      PathPart: activate
      RestApiId: !Ref RESTAPI

  ########################################################################
  #  |  __ \ \   / / \ | |   /\   |  \/  |/ __ \|  __ \|  _ \
  #  | |  | \ \_/ /|  \| |  /  \  | \  / | |  | | |  | | |_) |
  #  | |  | |\   / | . ` | / /\ \ | |\/| | |  | | |  | |  _ <
  #  | |__| | | |  | |\  |/ ____ \| |  | | |__| | |__| | |_) |
  #  |_____/  |_|  |_| \_/_/    \_\_|  |_|\____/|_____/|____/
  ########################################################################
  UserServiceTable:
    Type: "AWS::DynamoDB::Table"
    Properties:
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: Username
          AttributeType: S
        - AttributeName: Email
          AttributeType: S
        - AttributeName: Version
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: Version
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: Email-index
          KeySchema:
            - AttributeName: Email
              KeyType: HASH
            - AttributeName: Version
              KeyType: RANGE
          Projection:
            ProjectionType: INCLUDE
            NonKeyAttributes:
              - PK
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
        - IndexName: Username-index
          KeySchema:
            - AttributeName: Username
              KeyType: HASH
            - AttributeName: Version
              KeyType: RANGE
          Projection:
            ProjectionType: INCLUDE
            NonKeyAttributes:
              - PK
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 3
      Tags:
        - Key: ServiceName
          Value: UsersService

  # #######################################################################
  #  | |  | |/ ____|  ____|  __ \ / ____/ ____|  ____|  __ \ \    / /_   _/ ____|  ____|/ ____|
  #  | |  | | (___ | |__  | |__) | (___| (___ | |__  | |__) \ \  / /  | || |    | |__  | (___
  #  | |  | |\___ \|  __| |  _  / \___ \\___ \|  __| |  _  / \ \/ /   | || |    |  __|  \___ \
  #  | |__| |____) | |____| | \ \ ____) |___) | |____| | \ \  \  /   _| || |____| |____ ____) |
  #   \____/|_____/|______|_|  \_\_____/_____/|______|_|  \_\  \/   |_____\_____|______|_____/
  ########################################################################

  # Create User Lambda function & API Gateway
  CreateUserHanlder:
    Type: "AWS::Lambda::Function"
    Properties:
      Code:
        S3Bucket: !Ref CodeBucketName
        S3Key: !Ref CodeObjectKey
      Description: Receives Cognito Post Confirm Sign Up Event.
      Environment:
        Variables:
          TableName: !Ref UserServiceTable
          LOG_LEVEL: !Ref LOGLEVEL
      FunctionName: !Sub "${AWS::StackName}-CreateUserHandler"
      Handler: dist/UsersServices/CreateUser.CreateUserHandler
      Role: !GetAtt CreateUserHandlerRole.Arn
      Runtime: nodejs14.x
      Timeout: 30
      Tags:
        - Key: ServiceName
          Value: UsersService
  CreateUserHandlerRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - edgelambda.amazonaws.com
            Action:
              - "sts:AssumeRole"
      RoleName: !Sub "${AWS::StackName}-CreateUserHandlerRole"
      Policies:
        - PolicyName: !Sub "${AWS::StackName}-CreateUserHandlerPolicy"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "dynamodb:PutItem"
                  - "dynamodb:Query"
                Resource:
                  - !GetAtt UserServiceTable.Arn
  # POST /users # API Gateway
  PostUsers:
    Type: "AWS::ApiGateway::Method"
    Properties:
      ApiKeyRequired: false
      AuthorizationType: AWS_IAM
      HttpMethod: GET
      Integration:
        Credentials: !GetAtt APIInvokeLambdaRole.Arn
        RequestTemplates:
          application/json: |-
            {
              "body": $input.body
            }
        IntegrationHttpMethod: POST
        Type: AWS
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateUserHanlder.Arn}/invocations'
      MethodResponses:
        - StatusCode: "200"
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: "400"
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
        - StatusCode: "500"
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: true
      OperationName: CreateUser
      ResourceId: !Ref UsersResource
      RestApiId: !Ref RESTAPI
